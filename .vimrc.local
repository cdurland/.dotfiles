"" set NOP on the keyboard keys
noremap <Left>  <NOP>
noremap <Right> <NOP>
noremap <Up>    <NOP>
noremap <Down>  <NOP>
inoremap <Left>  <NOP>
inoremap <Right> <NOP>
inoremap <Up>    <NOP>
inoremap <Down>  <NOP>
inoremap kj <esc>
nnoremap <F3> :set hlsearch!<CR>

"" GnuPG plugin setup
let g:GPGPreferArmor=1
let g:GPGDefaultRecipients=[""]
""set background=dark
""colorscheme solarized         " CHANGE BACK WHEN READY
""colorscheme spacegray
""colorscheme Tomorrow-night
color Dracula
set nu

syntax on
set encoding=utf-8
set showcmd                     " display incomplete commands

"" Rebind leader key
let mapleader = ","

"" Easier moving between tabs (:tabnew) and buffers (:bn)
nnoremap <C-Tab> :bnext<CR>
""noremap <Leader>n <esc>:bn<CR>
""noremap <Leader>b <esc>:bp<CR>

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=4 shiftwidth=4      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

"" Pathogen (Python for Vim)
filetype on
filetype plugin indent on       " load file type plugins + indentation
""call pathogen#infect()
""call pathogen#helptags()
set modelines=0

"" autoreload .vimrc on save
augroup myvimrc
    au!
    au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | so $MYGVIMRC | endif
augroup END

"" add ======= under current line
nnoremap <leader>1 yypVr=

"" same as above except line above as well
nnoremap <leader>2 yypVr=yykPjjo

"" Moar options (need to re-org this allllll later)
set relativenumber
"" set undofile
set wildmenu
set wildmode=list:longest
set ruler
set cursorline
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>
nnoremap ; :

"" Setting typing width and wrap
set wrap
set textwidth=79
set formatoptions=qrn1
set colorcolumn=85

"" Strip all trailing whitespace
nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>

"" Open vimrc in a split
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
